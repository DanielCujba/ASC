     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 12                          a db 12h
    14 00000001 A174                        b dw 74A1h
    15 00000003 49213F24                    c dd 243F2149h
    16 00000007 52E896829BC78A76            d dq 768AC79B8296E852h
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 A0[00000000]                    mov AL,[a]      ;AL=a
    22 00000005 6698                            cbw
    23 00000007 98                              cwde            ;EAX=a
    24 00000008 89C3                            mov EBX,EAX     ;EBX=a
    25 0000000A 66A1[01000000]                  mov AX,[b]      ;AX=b
    26 00000010 98                              cwde            ;EAX=b
    27 00000011 0305[03000000]                  add EAX,[c]     ;EAX=c+b
    28 00000017 01D8                            add EAX,EBX     ;EAX=c+b+a
    29 00000019 99                              cdq             ;EDX:EAX=c+b+a
    30 0000001A 8B1D[07000000]                  mov EBX,[d]
    31 00000020 8B0D[0B000000]                  mov ECX,[d+4]   ;ECX:EBX=d
    32 00000026 031D[07000000]                  add EBX,[d]
    33 0000002C 130D[0B000000]                  adc ECX,[d+4]   ;ECX:EBX=d+d
    34 00000032 29D8                            sub EAX,EBX
    35 00000034 19CA                            sbb EDX,ECX     ;EDX:EAX=(c+b+a)-(d+d)
    36                                          ; exit(0)
    37 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
