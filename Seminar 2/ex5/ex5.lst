     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01000000                    a dd 1
    14 00000004 01                          b db 1
    15 00000005 0100                        c dw 1
    16 00000007 0100                        d dw 1
    17 00000009 <res 00000004>              x resd 1
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 66A1[00000000]                  mov ax,[a]
    23 00000006 668B15[02000000]                mov dx,[a+2]
    24 0000000D 66BB0200                        mov bx,2
    25 00000011 66F7FB                          idiv bx
    26 00000014 6689C2                          mov dx,ax
    27 00000017 A0[04000000]                    mov al,[b]
    28 0000001C B303                            mov bl,3
    29 0000001E F6EB                            imul bl
    30 00000020 6601C2                          add dx,ax
    31 00000023 66A1[05000000]                  mov ax,[c]
    32 00000029 66F72D[07000000]                imul word [d]
    33 00000030 6652                            push dx
    34 00000032 6650                            push ax
    35 00000034 58                              pop eax
    36 00000035 89C8                            mov eax,ecx
    37 00000037 6689D0                          mov ax,dx
    38 0000003A 98                              cwde
    39 0000003B 29C8                            sub eax,ecx
    40 0000003D 83C064                          add eax,100
    41 00000040 A3[09000000]                    mov [x],eax
    42                                          ; exit(0)
    43 00000045 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000047 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
