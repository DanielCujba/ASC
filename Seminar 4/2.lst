     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...        
    14 00000000 636F616965                  a db "coaie"
    15                                      l equ $-$$
    16 00000005 <res 00000005>              b resb l
    17                                  
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 BE[00000000]                    mov ESI,a
    24 00000005 BF[09000000]                    mov EDI,a+2*l-1
    25 0000000A B8[0A000000]                    mov EAX,$
    26 0000000F B905000000                      mov ECX,l
    27 00000014 E306                            jecxz end
    28                                          label:
    29 00000016 FC                                  CLD
    30 00000017 AC                                  lodsb
    31 00000018 FD                                  STD
    32 00000019 AA                                  stosb
    33 0000001A E2FA                            loop label
    34                                          end:
    35                                          ; exit(0)
    36 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
